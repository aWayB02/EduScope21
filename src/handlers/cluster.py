from aiogram import Router
from .dispatcher import dp
from aiogram import F
from aiogram.types import (
    CallbackQuery,
)
from handlers.buttons import cluster
from api.clusters import get_cluster
from handlers.buttons import main_menu

router = Router()


names_clusters = {
    "D": ("Denal", 3),
    "E": ("Ezdel", 2),
    "S": ("Sabar", 3),
    "T": ("Tesham", 2),
}


@router.callback_query(F.data == "open_cluster")
async def get_open_cluster(callback: CallbackQuery):
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Ç–µ—Ä:", reply_markup=cluster())
    await callback.answer()


@router.callback_query(F.data.startswith("cluster:"))
async def get_cluster_info(callback: CallbackQuery):
    name = callback.data.split(":")[-1]
    data = await get_cluster(names_clusters[name][0])
    total_places, free_places, occupied_places = data
    await callback.message.answer(
        f"–ö–ª–∞—Å—Ç–µ—Ä: <b>{names_clusters[name][0]} | –≠—Ç–∞–∂: {names_clusters[name][1]}</b>\n"
        f"–†–∞–±–æ—á–∏—Ö —Å—Ç–∞–Ω—Ü–∏–π –≤—Å–µ–≥–æ: <b>{total_places} üü¢</b>\n"
        f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏: <b>{free_places} üÜì</b>\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏: <b>{occupied_places} üßëüèª‚Äçüíª</b>",
        parse_mode="HTML",
        reply_markup=cluster(),
    )
    await callback.answer()


@dp.callback_query(F.data == "back")
async def back(callback: CallbackQuery):
    await callback.message.answer(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
    await callback.answer()


dp.include_router(router)
